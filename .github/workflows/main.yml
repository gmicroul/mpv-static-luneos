name: Build MPV ARM64 Static for Linux 4.9 and Publish to Release

on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  # 使用最新版的 Ubuntu 作为运行环境

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up QEMU for ARM64
      uses: docker/setup-qemu-action@v1
      with:
        platforms: linux/arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          libass-dev \
          libavcodec-dev \
          libavformat-dev \
          libavutil-dev \
          libcaca-dev \
          libfreetype6-dev \
          libjpeg-dev \
          libmp3lame-dev \
          libopencore-amrnb-dev \
          libopencore-amrwb-dev \
          libpng-dev \
          libspeex-dev \
          libtheora-dev \
          libva-dev \
          libvdpau-dev \
          libvorbis-dev \
          libxcb1-dev \
          libxcb-shm0-dev \
          libxcb-xfixes0-dev \
          pkg-config \
          yasm \
          zlib1g-dev \
          wget

    - name: Download and extract Linux 4.9 kernel headers
      run: |
        wget https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.9.tar.xz
        tar xf linux-4.9.tar.xz
        sudo cp -r linux-4.9/include/linux /usr/src/linux-headers-4.9/

    - name: Build MPV
      run: |
        git clone https://github.com/mpv-player/mpv.git
        cd mpv
        ./bootstrap.py
        ./waf configure --enable-static --disable-shared --enable-libmpv-shared --enable-egl-platform --enable-gpl --enable-version3 --enable-drm --enable-alsa --enable-caca --enable-jack --enable-libass --enable-libarchive --enable-libbluray --enable-libbs2b --enable-libcaca --enable-libcdio --enable-libdvdnav --enable-libdvdread --enable-libfdk-aac --enable-libfontconfig --enable-libfreetype --enable-libjack --enable-libmp3lame --enable-libmodplug --enable-libopenal --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopencv --enable-libpulse --enable-librtmp --enable-libschroedinger --enable-libshine --enable-libspeex --enable-libssh --enable-libtheora --enable-libtwolame --enable-libv4l2 --enable-libvo-amrwbenc --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxvid --enable-libzimg --enable-libzvbi --enable-opencl --enable-opengl --enable-pulse --enable-sdl --enable-vaapi --enable-vdpau --enable-x11
        ./waf build
        ./waf install

    - name: Archive the built binaries
      id: archive
      run: |
        mkdir -p artifacts
        cp -r /usr/local/bin/* artifacts/
        echo "::set-output name=artifacts::$(pwd)/artifacts"

    - name: Upload artifacts to GitHub Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ steps.archive.outputs.artifacts }}
        asset_name: mpv-linux-arm64-static.zip
        asset_content_type: application/zip

    - name: Create or Update GitHub Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: "MPV ARM64 Static Build for Linux 4.9"
        draft: false
        prerelease: false
